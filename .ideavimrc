"" .ideavimrc - Matt Chapman


"" Base Settings
"" ========================================================

set scrolloff=5
set relativenumber
set number
set showmode
set showcmd

set ignorecase
set smartcase
set incsearch
set hlsearch

set visualbell
set ideavimsupport=

" Use system clipboard
set clipboard+=unnamed   

let mapleader = " "


"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
###set sneak
set nerdtree

" Easymotion settings
###set easymotion
set notimeout

" Which-key settings
"""set which-key
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

let g:WhichKeyDesc_leader = "<leader> Leader key"

let g:WhichKeyDesc_leader = "<leader>x Open file explorer"

let g:WhichKeyDesc_easymotion = "<leader>j Jump with Easymotion"
let g:WhichKeyDesc_easymotion_prefix = "<leader><leader>"

let g:WhichKeyDesc_comment = "<leader>c Comment line"

let g:WhichKeyDesc_fold = "<leader>z Folding"
let g:WhichKeyDesc_fold_all = "<leader>zc Fold all regions"
let g:WhichKeyDesc_unfold_all = "<leader>zo Unfold all regions"

let g:WhichKeyDesc_window = "<leader>w Window splits"
let g:WhichKeyDesc_window_split_vertically = "<leader>wv Split vertically"
let g:WhichKeyDesc_window_split_horizontally = "<leader>wh Split horizontally"
let g:WhichKeyDesc_window_split_unsplit = "<leader>wu Unsplit"
let g:WhichKeyDesc_window_split_move_editor = "<leader>wm Move editor to opposite tab group"


let g:WhichKeyDesc_display = "<leader>d Display options"
let g:WhichKeyDesc_zen_mode = "<leader>dz Toggle Zen mode"
let g:WhichKeyDesc_df_mode = "<leader>dd Toggle Distraction-Free mode"
let g:WhichKeyDesc_fullscreen = "<leader>df Toggle full screen"

let g:WhichKeyDesc_action= "<leader>a Actions"
let g:WhichKeyDesc_action_context_menu = "<leader>am Open context menu"
let g:WhichKeyDesc_action_search = "<leader>as Open command modal"

let g:WhichKeyDesc_file_quickLook = "<leader><leader> Recent files"

let g:WhichKeyDesc_file_nav = "<leader>f File navigation"
let g:WhichKeyDesc_file_nav_goto_file = "<leader>ff Go to file"
let g:WhichKeyDesc_file_nav_goto_content = "<leader>fc Search for file content"
let g:WhichKeyDesc_file_nav_show_recent_files = "<leader>fr Show recent files"
let g:WhichKeyDesc_file_nav_show_recent_locations = "<leader>fl Show recent locations"

let g:WhichKeyDesc_close_tab = "<leader>q Close active tab"

let g:WhichKeyDesc_refactoring = "<leader>r Refactoring menu"
let g:WhichKeyDesc_refactoring_rename = "<leader>rn Rename element"
let g:WhichKeyDesc_refactoring_method = "<leader>rm Extract method"
let g:WhichKeyDesc_refactoring_variable = "<leader>rv Introduce variable"
let g:WhichKeyDesc_refactoring_field = "<leader>rf Introduce field"
let g:WhichKeyDesc_refactoring_signature = "<leader>rs Change signature"
let g:WhichKeyDesc_refactoring_all = "<leader>rr Open refactorings list"

let g:WhichKeyDesc_goto = "<leader>g Go to X"
let g:WhichKeyDesc_goto_declaration = "<leader>gd Go to Definition"
let g:WhichKeyDesc_goto_type_declaration = "<leader>gy Go to Type Definition"
let g:WhichKeyDesc_goto_implementation = "<leader>gi Go to Implementation"
let g:WhichKeyDesc_goto_usages = "<leader>gu Go to Usages"
let g:WhichKeyDesc_goto_test = "<leader>gt Go to Test"
let g:WhichKeyDesc_goto_back = "<leader>gb Go Back"
let g:WhichKeyDesc_goto_forward = "<leader>gf Go Forward"

let g:WhichKeyDesc_git = "<leader>g Git operations"
let g:WhichKeyDesc_git_commit = "<leader>gc Open Git commit dialog"
let g:WhichKeyDesc_git_status = "<leader>gs Open Git status dialog"
let g:WhichKeyDesc_git_branches = "<leader>gb Open Git branches list"

let g:WhichKeyDesc_errors = "<leader>e Error navigation"
let g:WhichKeyDesc_errors_next = "<leader>en Go to next error in solution"
let g:WhichKeyDesc_errors_prev = "<leader>ep Go to previous error in solution"


"" Key mappings
"" ========================================================

inoremap jk <Esc>
inoremap kj <Esc>

" Move up and down
nnoremap J 5j
nnoremap K 5k

" Tab navigation
nnoremap <C-n> :tabnext<CR>
nnoremap <C-m> :tabprev<CR>

" Pane navigation
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>j

" Jump between methods
nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" Execute macro saved in 'q' register
nnoremap qj @q

" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)


"" Leader commands
"" ========================================================

" Join lines
nnoremap <leader>j J

" Remove highlight
map <leader>/ :noh<CR>

" Open register
map <leader>' :reg<CR>

" Comment
map <leader>c <action>(CommentByLineComment)
map <leader>C <action>(CommentByBlockComment)

" Hide window
map <leader>h <action>(HideActiveWindow)

" Jump around with easymotion
"""map <leader>j <Plug>(easymotion-s)

" Open NERDTree (use q to exit)
map <leader>x :NERDTreeToggle<CR>

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <leader>lv <Action>(SplitVertically)
map <leader>ls <Action>(SplitHorizontally)
map <leader>lu <Action>(Unsplit)
map <leader>lm <Action>(MoveEditorToOppositeTabGroup)

" Display options
map <leader>pd <action>(ToggleDistractionFreeMode)
map <leader>pz <action>(ToggleZenMode)
map <leader>pf <action>(ToggleFullScreen)

" Actions (todo, like run debug etc)
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)
map <leader>ar <action>(Run)
map <leader>ad <action>(Debug)
map <leader>ap <action>(Stop)

" File navigation
map <leader>ef <action>(GotoFile)
map <leader>er <action>(RecentFiles)
map <leader>ec <action>(FindInPath)
map <leader><leader> <Action>(RecentFiles)
map <leader>el <action>(RecentLocations)
map <leader>es <action>(NewScratchFile)

" Focus window
map <leader>fs <action>(SearchEverywhere)
map <leader>ff <action>(FindInPath)
map <leader>fr <action>(ReplaceInPath)
map <leader>ft <action>(ActivateTerminalToolWindow)
map <leader>fl <action>(ActivateLogcatToolWindow)
map <leader>fe <action>(ActivateProjectToolWindow)
map <leader>fg <action>(ActivateVersionControlToolWindow)
map <leader>fd <action>(ActivateDebugToolWindow)
map <leader>ft <action>(ActivateBuildVariantsToolWindow)
map <leader>fp <action>(ActivateAndroidProfilerToolWindow)
map <leader>fc <action>(CommanderPopupMenu)

" Close editors
map <leader>ww <action>(CloseEditor)
map <leader>wa <action>(CloseAllEditors)
map <leader>wo <action>(CloseAllEditorsButActive)
map <leader>wr <action>(ReopenClosedTab)
map <leader>wu <action>(CloseAllUnmodifiedEditors)
map <leader>wg <action>(CloseEditorsGroup)

" Select (todo)
"""map <leader>sa <action>()

" Refactor
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gp <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gy <Action>(GotoSymbol)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gb <Action>(Forward)

" Bookmarks
map <leader>ba <action>(Bookmarks)
map <leader>bs <action>(ShowBookmarks)
map <leader>bb <Action>(ToggleBookmark)
map <leader>bn <Action>(GotoNextBookmark)
map <leader>bm <Action>(GotoPreviousBookmark)

" Git
map <leader>gv <Action>(ActivateVersionControlToolWindow)
map <leader>gc <Action>(CheckinProject)
map <leader>gb <Action>(Git.Branches)
map <leader>gs <Action>(Vcs.Show.Shelf)
map <leader>gg <Action>(Vcs.RollbackChangedLines)
map <leader>gr <Action>(Git.Reset)
"""map <leader>gd <Action>(ChangesView.Diff)

" Debug
map <leader>dd <Action>(ToggleLineBreakpoint)
map <leader>da <Action>(ActivateDebugToolWindow)
map <leader>dv <Action>(ViewBreakpoints)
map <leader>dr <Action>(Resume)
map <leader>do <Action>(StepOver)
map <leader>di <Action>(StepInto)
map <leader>du <Action>(StepOut)
"""map <leader>dm <Action>(MuteBreakpoints)
"""map <leader>df <Action>(FocusOnBreakpoint)

" Errors
"""map <leader>en <Action>(ReSharperGotoNextErrorInSolution)
"""map <leader>ep <Action>(ReSharperGotoPrevErrorInSolution)

